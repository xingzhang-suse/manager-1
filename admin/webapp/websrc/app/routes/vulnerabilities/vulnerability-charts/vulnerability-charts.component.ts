import { Component, Input, OnInit } from '@angular/core';
import { ChartConfiguration } from 'chart.js';
import { TranslateService } from '@ngx-translate/core';
import { VulnerabilitiesService } from '../vulnerabilities.service';

@Component({
  selector: 'app-vulnerability-charts',
  templateUrl: './vulnerability-charts.component.html',
  styleUrls: ['./vulnerability-charts.component.scss'],
})
export class VulnerabilityChartsComponent implements OnInit {
  @Input() complianceDist!: any;
  topVulnerableNodesChartData!: ChartConfiguration<'bar', number[], string>;
  topVulnerableImagesChartData!: ChartConfiguration<'bar', number[], string>;
  barChartColors = {
    critical: '#e91e63',
    high: '#ef5350',
    medium: '#ff9800',
    low: '#4caf50',
  };

  constructor(
    private translate: TranslateService,
    private vulnerabilitiesService: VulnerabilitiesService
  ) {}

  updateData(): void {
    let topNodes = this.vulnerabilitiesService.activeSummary.top_nodes.sort(
      (a, b) => a.index - b.index
    );
    this.topVulnerableNodesChartData.data = {
      ...this.topVulnerableNodesChartData.data,
      labels: topNodes.map(node => node.display_name),
      datasets: [
        {
          ...this.topVulnerableNodesChartData.data.datasets[0],
          data: topNodes.map(node => node.critical),
        },
        {
          ...this.topVulnerableNodesChartData.data.datasets[0],
          data: topNodes.map(node => node.high),
        },
        {
          ...this.topVulnerableNodesChartData.data.datasets[1],
          data: topNodes.map(node => node.medium),
        },
        {
          ...this.topVulnerableNodesChartData.data.datasets[2],
          data: topNodes.map(node => node.low),
        },
      ],
    };
    let topImages = this.vulnerabilitiesService.activeSummary.top_images.sort(
      (a, b) => a.index - b.index
    );
    this.topVulnerableImagesChartData.data = {
      ...this.topVulnerableImagesChartData.data,
      labels: topImages.map(image => image.display_name),
      datasets: [
        {
          ...this.topVulnerableImagesChartData.data.datasets[0],
          data: topImages.map(image => image.critical),
        },
        {
          ...this.topVulnerableImagesChartData.data.datasets[0],
          data: topImages.map(image => image.high),
        },
        {
          ...this.topVulnerableImagesChartData.data.datasets[1],
          data: topImages.map(image => image.medium),
        },
        {
          ...this.topVulnerableImagesChartData.data.datasets[2],
          data: topImages.map(image => image.low),
        },
      ],
    };
  }

  ngOnInit() {
    let topNodes = this.vulnerabilitiesService.activeSummary.top_nodes.sort(
      (a, b) => a.index - b.index
    );
    this.topVulnerableNodesChartData = {
      options: {
        indexAxis: 'y',
        elements: {
          bar: {
            borderWidth: 2,
          },
        },
        maintainAspectRatio: false,
        plugins: {
          legend: {
            display: true,
            position: 'top',
          },
          title: {
            display: true,
            text: this.translate.instant(
              'scan.report.others.TOP_VULNERABLE_HOSTS'
            ),
          },
        },
      },
      data: {
        labels: topNodes.map(node => node.display_name),
        datasets: [
          {
            data: topNodes.map(node => node.critical),
            label: this.translate.instant('enum.CRITICAL'),
            backgroundColor: this.barChartColors.critical,
            hoverBackgroundColor: this.barChartColors.critical,
            barThickness: 4,
            borderWidth: 0,
            barPercentage: 0.04,
          },
          {
            data: topNodes.map(node => node.high),
            label: this.translate.instant('enum.HIGH'),
            backgroundColor: this.barChartColors.high,
            hoverBackgroundColor: this.barChartColors.high,
            barThickness: 4,
            borderWidth: 0,
            barPercentage: 0.04,
          },
          {
            data: topNodes.map(node => node.medium),
            label: this.translate.instant('enum.MEDIUM'),
            backgroundColor: this.barChartColors.medium,
            hoverBackgroundColor: this.barChartColors.medium,
            barThickness: 4,
            borderWidth: 0,
            barPercentage: 0.04,
          },
          {
            data: topNodes.map(node => node.low),
            label: this.translate.instant('enum.LOW'),
            backgroundColor: this.barChartColors.low,
            hoverBackgroundColor: this.barChartColors.low,
            barThickness: 4,
            borderWidth: 0,
            barPercentage: 0.04,
          },
        ],
      },
      type: 'bar',
    };
    let topImages = this.vulnerabilitiesService.activeSummary.top_images.sort(
      (a, b) => a.index - b.index
    );
    this.topVulnerableImagesChartData = {
      options: {
        indexAxis: 'y',
        elements: {
          bar: {
            borderWidth: 2,
          },
        },
        maintainAspectRatio: false,
        plugins: {
          legend: {
            display: true,
            position: 'top',
          },
          title: {
            display: true,
            text: this.translate.instant(
              'scan.report.others.TOP_VULNERABLE_IMAGES'
            ),
          },
        },
      },
      data: {
        labels: topImages.map(image => image.display_name),
        datasets: [
          {
            data: topImages.map(image => image.critical),
            label: this.translate.instant('enum.CRITICAL'),
            backgroundColor: this.barChartColors.critical,
            hoverBackgroundColor: this.barChartColors.critical,
            barThickness: 4,
            borderWidth: 0,
            barPercentage: 0.04,
          },
          {
            data: topImages.map(image => image.high),
            label: this.translate.instant('enum.HIGH'),
            backgroundColor: this.barChartColors.high,
            hoverBackgroundColor: this.barChartColors.high,
            barThickness: 4,
            borderWidth: 0,
            barPercentage: 0.04,
          },
          {
            data: topImages.map(image => image.medium),
            label: this.translate.instant('enum.MEDIUM'),
            backgroundColor: this.barChartColors.medium,
            hoverBackgroundColor: this.barChartColors.medium,
            barThickness: 4,
            borderWidth: 0,
            barPercentage: 0.04,
          },
          {
            data: topImages.map(image => image.low),
            label: this.translate.instant('enum.LOW'),
            backgroundColor: this.barChartColors.low,
            hoverBackgroundColor: this.barChartColors.low,
            barThickness: 4,
            borderWidth: 0,
            barPercentage: 0.04,
          },
        ],
      },
      type: 'bar',
    };
    this.vulnerabilitiesService.activeSummary$.subscribe(_ => {
      this.updateData();
    });
  }
}
